{"version":3,"file":"MapModel.js","sourceRoot":"","sources":["../../../../../src/game/models/MapModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { TILE } from '../views/Tile';\r\n\r\nexport class MapModel{\r\n\r\n    private map: number[][];\r\n    private row: number;\r\n    private col: number;\r\n\r\n    constructor(col: number, row: number, isRandom: boolean){\r\n        this.map = (isRandom) ? this.createRandomMap(col, row) : this.createEmptyMap(col, row);\r\n        this.row = row;\r\n        this.col = col;\r\n    }\r\n\r\n    get():number[][] {\r\n        return this.map;\r\n    }\r\n\r\n    getCol(): number {\r\n        return this.col;\r\n    }\r\n\r\n    getRow(): number {\r\n        return this.row;\r\n    }\r\n\r\n    createEmptyMap(col: number, row: number): number[][] {\r\n        let array: number[][] = [];\r\n        for (let index = 0; index < row; index++) {\r\n            array.push(new Array(col+1).join(\"0\").split(\"\").map((element) => 0));\r\n        }\r\n        return array;\r\n    }\r\n\r\n    createRandomMap(col: number, row: number): number[][] {\r\n        let array: number[][] = [];\r\n        for (let index = 0; index < row; index++) {\r\n            array.push(new Array(col+1).join(\"0\").split(\"\").map((element) => {\r\n                let num = Math.floor(Math.random()*20);\r\n                if(num < 15){\r\n                    return TILE.GREEN;\r\n                } else if(num == 16){\r\n                    return TILE.HOUSE;\r\n                } else if(num == 17){\r\n                    return TILE.MOUNTAIN_BROWN;\r\n                } else if(num == 18){\r\n                    return TILE.MOUNTAIN;\r\n                } else if(num == 19){\r\n                    return TILE.WATER;\r\n                } else {\r\n                    return TILE.TREES;\r\n                }\r\n            }));\r\n        }\r\n\r\n        let r = Math.floor(Math.random()*row);\r\n        let c = Math.floor(Math.random()*col);\r\n\r\n        array[r][c] = TILE.START;\r\n\r\n        let r0 = Math.floor(Math.random()*row);\r\n        let c0 = Math.floor(Math.random()*col);\r\n\r\n        while(r0 == r && c0 == c){\r\n            r0 = Math.floor(Math.random()*row);\r\n            c0 = Math.floor(Math.random()*col);\r\n        }\r\n        array[r0][c0] = TILE.END;\r\n\r\n        return array;\r\n    }\r\n\r\n    \r\n}"]}