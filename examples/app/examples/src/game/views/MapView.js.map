{"version":3,"file":"MapView.js","sourceRoot":"","sources":["../../../../../src/game/views/MapView.ts"],"names":[],"mappings":"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","sourcesContent":["import * as PIXI from 'pixi.js';\r\nimport { MapModel } from '../models/MapModel';\r\nimport { TILE, Tile } from './Tile';\r\nimport { GameStateManager } from '../states/GameStateManager';\r\nimport { Start } from '../states/Start';\r\nimport { End } from '../states/End';\r\nimport { Build } from '../states/Build';\r\nimport { Initial } from '../states/Initial';\r\n\r\nexport class MapView {\r\n \r\n    private size:number;\r\n    public tiles = new Map();\r\n    private map: MapModel;\r\n    private container: PIXI.Container = new PIXI.Container();\r\n    private saveTimeout: number[] = [];\r\n\r\n    private gameStateManager:GameStateManager;\r\n\r\n    constructor(size: number){\r\n        this.size = size;\r\n    }\r\n\r\n    setState(gameStateManager: GameStateManager){\r\n        this.gameStateManager = gameStateManager;\r\n    }\r\n\r\n    createStage(map:MapModel, resources: PIXI.loaders.Resource): PIXI.Container {\r\n\r\n        this.map = map;\r\n        this.map.get().forEach((elementRow, indexRow) => {\r\n            elementRow.forEach((elementCol, indexCol) => {\r\n                let button = new Tile(elementCol, indexCol, indexRow, this.size, resources);\r\n                button.interactive = true;\r\n                button.buttonMode = true;\r\n                button.on(\"mousedown\", this.onClick.bind(this, button), this);\r\n                let trapFunction = this.update.bind(this);\r\n                let tile = new Proxy(button , {\r\n                    set (target, key, value) {\r\n                        if(key === \"_textureID\"){\r\n                            trapFunction(target);\r\n                        }\r\n                        return Reflect.set(target, key, value);\r\n                    }\r\n                });\r\n                \r\n                this.tiles.set(`${indexCol}-${indexRow}`, button );\r\n                tile.x = indexCol*this.size;\r\n                tile.y =  indexRow*this.size;\r\n                this.container.addChild(tile);\r\n            })\r\n        })\r\n\r\n        this.createBorder(resources, this.map.getCol(), this.map.getRow());\r\n\r\n        return this.container;\r\n    }\r\n\r\n    createBorder(resources:any, col:number, row:number){\r\n\r\n        this.createElementBorder(TILE.BORDER_TOP_LEFT, -1, -1, resources);\r\n\r\n        for (let index = 0; index < row; index++) {\r\n            this.createElementBorder(TILE.BORDER_MIDDLE_LEFT, -1, index, resources);\r\n        }\r\n\r\n        this.createElementBorder(TILE.BORDER_BOTTOM_LEFT, -1, row, resources);\r\n\r\n        for (let index = 0; index < row; index++) {\r\n            this.createElementBorder(TILE.BORDER_MIDDLE_RIGHT, col, index, resources);\r\n        }\r\n\r\n        this.createElementBorder(TILE.BORDER_TOP_RIGHT, col, -1, resources);\r\n        \r\n        for (let index = 0; index < col; index++) {\r\n            this.createElementBorder(TILE.BORDER_TOP_MIDDLE, index, -1, resources);\r\n        }\r\n\r\n        this.createElementBorder(TILE.BORDER_BOTTOM_RIGHT, col, row, resources);\r\n\r\n        for (let index = 0; index < col; index++) {\r\n            this.createElementBorder(TILE.BORDER_BOTTOM_MIDDLE, index, row, resources);\r\n        }\r\n    }\r\n\r\n    createElementBorder(type : number, x : number, y : number, resources:any){\r\n        let border = new Tile(type, 0, 0, this.size, resources);\r\n        border.x = x*this.size;\r\n        border.y = y*this.size;\r\n        this.container.addChild(border);\r\n    }\r\n\r\n    setMap(map:MapModel){\r\n        this.map = map;\r\n    }\r\n\r\n    update(tile:Tile){\r\n        this.map.get()[tile.getRow()][tile.getCol()] = tile.type;\r\n    }\r\n\r\n    onClick(button:Tile){\r\n        if(this.gameStateManager.currentState instanceof Initial){\r\n            this.gameStateManager.update();\r\n            button.changeTileType();\r\n            this.update(button);\r\n        } else if(this.gameStateManager.currentState instanceof Build){\r\n            button.changeTileType();\r\n            this.update(button);\r\n        } else if(this.gameStateManager.currentState instanceof Start){\r\n            button.changeTileType(TILE.START);\r\n            this.update(button);\r\n            this.gameStateManager.update();\r\n        } else if(this.gameStateManager.currentState instanceof End){\r\n            button.changeTileType(TILE.END);\r\n            this.update(button);\r\n            this.gameStateManager.update();\r\n        } \r\n        \r\n    }\r\n\r\n    disableTiles(){\r\n       // this.tiles.forEach((element) => element.disable());\r\n    }\r\n\r\n    clearTimeoutList(){\r\n        this.saveTimeout.map((t)=> {clearTimeout(t)});\r\n        this.saveTimeout = [];\r\n    }\r\n\r\n    highlightRectangule(index:number, row: number, col: number, parentRow: number, parentCol: number){\r\n        let tile = this.tiles.get(`${col}-${row}`);\r\n        let direction = TILE.RIGHT;\r\n        if(col > parentCol && row === parentRow){\r\n            direction = TILE.LEFT;\r\n        } else if(col < parentCol && row === parentRow){\r\n            direction = TILE.RIGHT;\r\n        } else if(col == parentCol && row < parentRow){\r\n            direction = TILE.BOTTOM;\r\n        } else if(col == parentCol && row > parentRow){\r\n            direction = TILE.TOP;\r\n        } else if(col < parentCol && row > parentRow){\r\n            direction = TILE.TOP_RIGHT;\r\n        } else if(col < parentCol && row < parentRow){\r\n            direction = TILE.BOTTOM_RIGHT;\r\n        } else if(col > parentCol && row < parentRow){\r\n            direction = TILE.BOTTOM_LEFT;\r\n        } else if(col > parentCol && row > parentRow){\r\n            direction = TILE.TOP_LEFT;\r\n        }\r\n\r\n        if(index === 0)this.clearTimeoutList();\r\n        this.saveTimeout.push(setTimeout(() => {tile.highlight(direction);}, 200*index));\r\n    }\r\n\r\n    \r\n    \r\n}"]}