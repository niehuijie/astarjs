{"version":3,"file":"AppController.js","sourceRoot":"","sources":["../../../../../src/game/controllers/AppController.ts"],"names":[],"mappings":"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","sourcesContent":["import { MapView } from '../views/MapView';\r\nimport { PathFinding, Types } from '../../../../src/';\r\nimport { MapModel } from '../models/MapModel';\r\nimport { Title } from '../components/Title';\r\nimport { Instructions } from '../components/Instructions';\r\nimport { GameStateManager } from '../states/GameStateManager';\r\nimport Button from '../components/Button';\r\nimport { TILE } from '../views/Tile';\r\n\r\nexport class AppController {\r\n\r\n    private size : number = 40;\r\n    private mapCol : number = 14;\r\n    private mapRow : number = 8;\r\n    private mapPaddingTopBottom : number = this.size * 5;\r\n    private mapPaddingLeftRight : number = this.size * 2;\r\n\r\n    private gameStateManager : GameStateManager;\r\n\r\n    private mapView : MapView = new MapView(this.size);\r\n    private resources : any;\r\n    private domElement : HTMLDivElement;\r\n    private app : PIXI.Application; \r\n\r\n    private randomMode : boolean = false;\r\n\r\n    private map : MapModel;\r\n\r\n    private listPath: Node[];\r\n\r\n    public instructions:Instructions;\r\n    public buttonDone:Button;\r\n    public buttonRandom:Button;\r\n    public buttonReset:Button;\r\n\r\n    constructor(){\r\n\r\n        const loader = new PIXI.loaders.Loader();\r\n        loader.add(\"tile-set\",\"../images/tile-set_01.png\")\r\n              .load(this.setup.bind(this));\r\n\r\n    }\r\n\r\n    setup(loader: PIXI.loaders.Loader, res : any){\r\n\r\n        this.resources = res[\"tile-set\"];\r\n\r\n        let width = this.size*this.mapCol + this.mapPaddingLeftRight;\r\n        let height = this.size*this.mapRow + this.mapPaddingTopBottom;\r\n\r\n        this.init(width, height);\r\n        \r\n        this.gameStateManager = new GameStateManager(this);\r\n        this.mapView.setState(this.gameStateManager);\r\n        this.setupView(width, height);\r\n    }\r\n\r\n    init(width : number, height : number){ \r\n\r\n        this.app = new PIXI.Application(width, height, \r\n                        { antialias: true , transparent: true});\r\n\r\n        let domElement = document.body.querySelector(\"#map\");\r\n        if(domElement)this.domElement = domElement as HTMLDivElement;\r\n        this.domElement.appendChild(this.app.view);\r\n    }\r\n\r\n    setupView(width : number, height : number){\r\n\r\n        this.map = new MapModel(this.mapCol, this.mapRow, this.randomMode);\r\n        if(this.randomMode)this.mapView.disableTiles();\r\n\r\n        let mapViewContainer = this.mapView.createStage(this.map, this.resources);\r\n        mapViewContainer.x = this.mapPaddingLeftRight/2;\r\n        mapViewContainer.y = this.mapPaddingTopBottom/5 * 4;\r\n        this.app.stage.addChild(mapViewContainer);\r\n\r\n        let title = new Title(\"Path Finding\", width);\r\n        title.x = (( width ) - title.width)/2;\r\n        title.y = 0;\r\n        this.app.stage.addChild(title);\r\n\r\n        this.instructions = new Instructions(this.gameStateManager.currentState.instructions, width - this.mapPaddingLeftRight);\r\n        this.instructions.x = this.mapPaddingLeftRight/2;\r\n        this.instructions.y = title.height;\r\n        this.app.stage.addChild(this.instructions);\r\n\r\n        this.buttonDone = new Button(380, this.instructions.y + this.instructions.height + 15 , 100, 20);\r\n        this.buttonDone.setText(\"DONE\");\r\n        this.buttonDone.clicked = this.onDoneClicked.bind(this);\r\n        \r\n        this.buttonRandom = new Button(310, this.instructions.y + this.instructions.height + 15 , 100, 20);\r\n        this.buttonRandom.setText(\"RANDOM\");\r\n        this.buttonRandom.clicked = this.onRandomClicked.bind(this);\r\n        this.app.stage.addChild(this.buttonRandom);\r\n\r\n        this.buttonReset = new Button(310, this.instructions.y + this.instructions.height + 15 , 100, 20);\r\n        this.buttonReset.setText(\"RESET\");\r\n        this.buttonReset.clicked = this.onResetClicked.bind(this);\r\n    }\r\n\r\n    buildView(){\r\n        this.buttonDone.x = 310;\r\n        this.app.stage.addChild(this.buttonDone);\r\n        this.app.stage.removeChild(this.buttonRandom);\r\n    }\r\n\r\n    removeButtonView(){\r\n        this.app.stage.removeChild(this.buttonDone);\r\n        this.app.stage.removeChild(this.buttonRandom);\r\n    }\r\n\r\n    resetView(){\r\n        this.app.stage.addChild(this.buttonReset);\r\n    }\r\n\r\n    onResetClicked(){\r\n        this.gameStateManager.update();\r\n        this.app.stage.removeChild(this.buttonDone);\r\n        this.app.stage.removeChild(this.buttonReset);\r\n        this.app.stage.addChild(this.buttonRandom);\r\n\r\n        this.randomMode = false;\r\n        this.generateMap();\r\n    }\r\n\r\n    generateMap(){\r\n        this.map = new MapModel(this.mapCol, this.mapRow, this.randomMode);\r\n        this.mapView.setMap(this.map);\r\n        this.map.get().forEach((elementRow, indexRow) => {\r\n            elementRow.forEach((elementCol, indexCol) => {\r\n                let tile = this.mapView.tiles.get(`${indexCol}-${indexRow}`);\r\n                tile.type = elementCol;\r\n                tile.update();\r\n                if(this.randomMode)tile.disable();\r\n                        else tile.enable();\r\n            })\r\n        })\r\n    }\r\n\r\n    onDoneClicked(){\r\n        this.gameStateManager.update();\r\n        this.mapView.setState(this.gameStateManager);\r\n    }\r\n\r\n    updateInstructions(value:string){\r\n        this.instructions.text = value;\r\n    }\r\n\r\n    onRandomClicked(){\r\n        this.randomMode = true;\r\n        this.generateMap();\r\n        this.gameStateManager.update(\"random\");\r\n    }\r\n\r\n    findPath(){\r\n       let bestPath: {col:number,row:number}[] = PathFinding.find(this.gameMapToPathfind(this.map));\r\n       if(bestPath.length > 0)this.showNodes(bestPath);\r\n    }\r\n\r\n    gameMapToPathfind(map: MapModel): number[][] {\r\n        return this.map.get().map(row=>{\r\n            return row.map(col => {\r\n                  if(col == TILE.END){\r\n                      return Types.END;\r\n                  } else if(col == TILE.START){\r\n                      return Types.START;\r\n                  } else if(col == TILE.GREEN){\r\n                      return Types.WALKABLE;\r\n                  } else {\r\n                      return Types.NON_WALKABLE;\r\n                  }\r\n             });\r\n        });\r\n    }\r\n\r\n    showNodes(listPath:{col:number, row:number}[]){\r\n        let nodeParent;\r\n        listPath.forEach((node, index) => {\r\n            nodeParent = listPath[index+1];\r\n            if(!nodeParent)return;\r\n            this.mapView.highlightRectangule(index, node.row, node.col,\r\n                                             nodeParent.row, nodeParent.col);\r\n        })\r\n    }\r\n\r\n}"]}