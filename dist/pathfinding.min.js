var Pathfinding=function(n){var o={};function r(t){if(o[t])return o[t].exports;var e=o[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,r),e.l=!0,e.exports}return r.m=n,r.c=o,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=(r.prototype.getRow=function(){return this.row},r.prototype.getCol=function(){return this.col},r.prototype.setH=function(t){this.h=t},r.prototype.getH=function(){return this.h},r.prototype.setG=function(t){this.g=t},r.prototype.getG=function(){return this.g+(this.parent?this.parent.getG():0)},r.prototype.getValue=function(){return this.getH()+this.getG()},r.prototype.setParent=function(t){this.parent=t},r.prototype.getParent=function(){return this.parent},r);function r(t,e){this.row=t,this.col=e,this.h=0,this.g=0,this.parent=null}e.Node=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0);e.Node=o.Node;var r=n(2);e.PathFinding=r.PathFinding,e.Types=r.Types},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s,o,f=n(0);(o=s=e.Types||(e.Types={}))[o.START=0]="START",o[o.END=1]="END",o[o.WALKABLE=2]="WALKABLE",o[o.NON_WALKABLE=3]="NON_WALKABLE";var r=(i.prototype.setWalkable=function(t){var e;this.walkableTypes=(e=this.walkableTypes).concat.apply(e,t)},i.prototype.gameMapToPathfind=function(t){var e=this;return t.map(function(t){return t.map(function(t){return-1<e.walkableTypes.indexOf(t)?s.WALKABLE:s.NON_WALKABLE})})},i.prototype.find=function(t){var e=this.gameMapToPathfind(t),n=this.findStartElement(e),o=this.findEndElement(e);return this.findBestPath(n,o,e)},i.prototype.findStartElement=function(t){return this.findElement(t,s.START)},i.prototype.findEndElement=function(t){return this.findElement(t,s.END)},i.prototype.findElement=function(t,o){var r=new f.Node(0,0);return t.forEach(function(t,n){t.forEach(function(t,e){t==o&&(r=new f.Node(n,e))})}),r},i.prototype.findBestPath=function(t,e,n){var o=[],r=[],i=!1;for(o.push(t);!i;)0<(r=this.findValidAdjacents(n,o[o.length-1],o,r,e)).length&&o.push(r.pop()),i=this.isNodeEqual(o[o.length-1],e)||0==r.length;return 0<r.length?this.getPath(o[o.length-1]):[]},i.prototype.findValidAdjacents=function(t,n,o,r,e){var i=this,u=this.findAdjacents(t,n).filter(function(e){return o.some(function(t){return!i.isNodeEqual(t,e)})});return u.filter(function(e){return r.some(function(t){return i.isNodeEqual(t,e)})}).forEach(function(e){var t=r.filter(function(t){return i.isNodeEqual(t,e)})[0];n.getG()+i.getMoveValue(t,n)<t.getG()&&(t.setG(i.getMoveValue(t,n)),t.setParent(n))}),u.filter(function(e){return!r.some(function(t){return i.isNodeEqual(t,e)})}).forEach(function(t){t.setParent(n),t.setH(i.distanceBetweenNodes(t,e,i.DEFAULT_DISTANCE)),t.setG(i.getMoveValue(n,t)),r.push(t)}),r.sort(function(t,e){return e.getValue()-t.getValue()}),r},i.prototype.distanceBetweenNodes=function(t,e,n){return Math.abs(e.getCol()-t.getCol())*n+Math.abs(e.getRow()-t.getRow())*n},i.prototype.getMoveValue=function(t,e){return t.getRow()!=e.getRow()&&t.getCol()!=e.getCol()?this.DIAGONAL_DISTANCE:this.DEFAULT_DISTANCE},i.prototype.findAdjacents=function(t,e){for(var n=[],o=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]],r=t,i=0;i<o.length;i++){var u=e.getRow()+o[i][0],a=e.getCol()+o[i][1];-1<u&&-1<a&&u<r.length&&a<r[u].length&&(r[u][a]==s.WALKABLE||r[u][a]==s.END)&&n.push(new f.Node(u,a))}return n},i.prototype.getPath=function(t){for(var e=t,n=[];e;)if(n.push(this.nodeToObject(e)),!(e=e.getParent()))return n.reverse();return[]},i.prototype.nodeToObject=function(t){return{col:t.getCol(),row:t.getRow()}},i.prototype.isNodeEqual=function(t,e){return t.getRow()==e.getRow()&&t.getCol()==e.getCol()},i);function i(){this.DEFAULT_DISTANCE=10,this.DIAGONAL_DISTANCE=14,this.walkableTypes=[]}e.PathFinding=r}]);