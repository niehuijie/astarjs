var Pathfinding=function(n){var r={};function i(t){if(r[t])return r[t].exports;var e=r[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,i),e.l=!0,e.exports}return i.m=n,i.c=r,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(1);e.PathFinding=r.PathFinding,e.Heuristic=r.Heuristic},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var p,r,f,i,c=n(2);(r=p=e.Types||(e.Types={})).START="s",r.END="e",r.WALKABLE="w",r.NON_WALKABLE="nw",(i=f=e.Heuristic||(e.Heuristic={}))[i.MANHATTAN=0]="MANHATTAN",i[i.DIAGONAL=1]="DIAGONAL";var o=(s.prototype.setWalkable=function(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this.walkableTypes=(t=this.walkableTypes).concat.apply(t,e).map(function(t){return-1<Object.prototype.toString.apply(t).indexOf("Number")?{type:t,weight:1}:t}),this},s.prototype.setStart=function(t){return this.start=t,this},s.prototype.setEnd=function(t){return this.end=t,this},s.prototype.gameMapToPathfind=function(t){var i=this,o="number"==typeof this.start,s="number"==typeof this.end;return t.map(function(t,r){return t.map(function(t,e){if(o&&i.start==t||!o&&i.start.row==r&&i.start.col==e)return p.START;if(s&&i.end==t||!s&&i.end.row==r&&i.end.col==e)return p.END;if(i.isTileWalkable(t)){var n=i.getTileWalkable(t);return n.weight?n.weight:0}return p.NON_WALKABLE})})},s.prototype.isTileWalkable=function(e){return this.walkableTypes.some(function(t){return t.type==e})},s.prototype.getTileWalkable=function(e){return this.walkableTypes.filter(function(t){return t.type==e})[0]},s.prototype.find=function(t){if(null==this.start||null==this.start)throw new Error("There is no start point. Please, use setStart() to configure the path's start point.");if(null==this.end||null==this.end)throw new Error("There is no end point. Please, use setEnd() to configure the path's end point.");var e=this.gameMapToPathfind(t),n="number"!=typeof this.start?new c.Node(this.start.row,this.start.col,0):this.findStartElement(e),r="number"!=typeof this.end?new c.Node(this.end.row,this.end.col,0):this.findEndElement(e);return this.findBestPath(n,r,e)},s.prototype.findStartElement=function(t){var e=this.findElement(t,p.START);if(null==e)throw new Error("Couldn't find a start point.");return e},s.prototype.findEndElement=function(t){var e=this.findElement(t,p.END);if(null==e)throw new Error("Couldn't find a end point.");return e},s.prototype.findElement=function(t,r){var i=null;return t.forEach(function(t,n){t.forEach(function(t,e){t==r&&(i=new c.Node(n,e,0))})}),i},s.prototype.findBestPath=function(t,e,n){var r,i=this,o=[],s=[],u=!1,a=t;for(o.push(t);!u;)this.updateLists(n,a,o,s,e),0<s.length&&o.push(s.pop()),a=o[o.length-1],r=this.findAdjacents(n,a).filter(function(t){return i.elementNotExistsInside(s,t)&&i.elementNotExistsInside(o,t)}),u=this.isNodeEqual(o[o.length-1],e)||0==s.length&&!r.length;return 0<s.length?this.getPath(o[o.length-1]):[]},s.prototype.updateLists=function(t,n,e,r,i){var o=this,s=this.findAdjacents(t,n).filter(function(t){return o.elementNotExistsInside(e,t)});s.filter(function(t){return o.elementExistsInside(r,t)}).forEach(function(e){var t=r.filter(function(t){return o.isNodeEqual(t,e)})[0];n.getG()+o.getMoveValue(t,n)<t.getG()&&(t.setG(o.getMoveValue(t,n)),t.setParent(n))}),s.filter(function(t){return o.elementNotExistsInside(r,t)}).forEach(function(t){t.setParent(n),t.setH(o.distanceBetweenNodes(t,i)),t.setG(o.getMoveValue(n,t)),r.push(t)}),r.sort(function(t,e){return e.getValue()-t.getValue()})},s.prototype.elementNotExistsInside=function(t,e){return!this.elementExistsInside(t,e)},s.prototype.elementExistsInside=function(t,e){var n=this;return t.some(function(t){return n.isNodeEqual(t,e)})},s.prototype.distanceBetweenNodes=function(t,e){var n=Math.abs(e.getCol()-t.getCol()),r=Math.abs(e.getRow()-t.getRow());return this.heuristic===f.MANHATTAN?this.DEFAULT_DISTANCE*(n+r):this.DEFAULT_DISTANCE*(n+r)+(this.DIAGONAL_DISTANCE-2*this.DEFAULT_DISTANCE)*Math.min(n,r)},s.prototype.getMoveValue=function(t,e){return t.getRow()!=e.getRow()&&t.getCol()!=e.getCol()?this.DIAGONAL_DISTANCE*(1+e.getWeight()):this.DEFAULT_DISTANCE*(1+e.getWeight())},s.prototype.findAdjacents=function(t,e){for(var n,r=[],i=[[-1,-1],[-1,1],[1,-1],[1,1]],o=[[-1,0],[0,-1],[0,1],[1,0]],s=t,u=0,a=0;a<o.length;a++)n=e.getRow()+o[a][0],u=e.getCol()+o[a][1],-1<n&&-1<u&&n<s.length&&u<s[n].length&&(this.isNumber(s[n][u])||s[n][u]==p.END)&&r.push(new c.Node(n,u,s[n][u]));var l=!1;if(this.heuristic===f.DIAGONAL)for(a=0;a<i.length;a++)if(n=e.getRow()+i[a][0],u=e.getCol()+i[a][1],-1<n&&-1<u&&n<s.length&&u<s[n].length&&(this.isNumber(s[n][u])||s[n][u]==p.END))if(this.allowDiagonal)r.push(new c.Node(n,u,s[n][u]));else{l=!1;for(var h=0;h<i.length;h++)h==a&&this.isNumber(s[n-i[a][0]][u])&&this.isNumber(s[n][u-i[a][1]])&&(l=!0);l&&r.push(new c.Node(n,u,s[n][u]))}return r},s.prototype.isNumber=function(t){return-1<Object.prototype.toString.apply(t).indexOf("Number")},s.prototype.getPath=function(t){for(var e=t,n=[];e;)n.push(this.nodeToObject(e)),e=e.getParent();return n.reverse()},s.prototype.nodeToObject=function(t){return{col:t.getCol(),row:t.getRow()}},s.prototype.isNodeEqual=function(t,e){return t.getRow()==e.getRow()&&t.getCol()==e.getCol()},s);function s(t){this.DEFAULT_DISTANCE=10,this.DIAGONAL_DISTANCE=14,this.heuristic=f.MANHATTAN,this.allowDiagonal=!1,this.walkableTypes=[],t&&t.heuristic&&(this.heuristic=t.heuristic,this.allowDiagonal=t.allowDiagonal||!1)}e.PathFinding=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=(i.prototype.getRow=function(){return this._row},i.prototype.getCol=function(){return this._col},i.prototype.getWeight=function(){return this._weight},i.prototype.setH=function(t){this._h=t},i.prototype.getH=function(){return this._h},i.prototype.setG=function(t){this._g=t},i.prototype.getG=function(){return this._g+(this._parent?this._parent.getG():0)},i.prototype.getValue=function(){return this.getH()+this.getG()},i.prototype.setParent=function(t){this._parent=t},i.prototype.getParent=function(){return this._parent},i);function i(t,e,n){void 0===n&&(n=0),this._row=t,this._col=e,this._weight=n,this._h=0,this._g=0,this._parent=null}e.Node=r}]);